## Challenges during the final project & how to overcome

- One major challenge that I faced in this project is that I am not too familiar with using the `socket` module for socket programming and the `scapy` module for packet manipulation in general.
  - However, there are quite a number of helpful online resources, especially those with diagrams to illustrate the differences between the 3 scanning modes, that I referred to in order to understand more thoroughly the differences between full TCP connect scan, SYN scan and FIN scan, as well as how to implement them accordingly.
  - Reviewing my previous coding assignments that involved using the `socket` and `scapy` modules helped too.
- Another major challenge that I encountered is to handle exceptions at different points in the program. This includes exceptions raised when a connection establishment is unsuccessful, or when `socket.getservbyport()` does not have any associated data for certain ports, or when no banner is sent by the server using the full TCP connect scan mode.
  - To overcome this, I took note of the exceptions thrown by my program if there was any, and tried applying several `try - except` blocks appropriately to handle the exceptions. I didn't notice the importance of all the `try - except` blocks in my program until I completed it.
- There is some difficulty in determining the suitable timeout duration for the socket connection.
  - I feel that the only way that worked for me is to do a bunch of trial and error until I found a value that I think makes the duration of the scan reasonable. To be honest, initially I set the timeout duration to be 0.01, and although the port scanner still worked as desired, I thought that was too short and changed it to 0.1.
- I used the `argparse` module before but didn't have a whole lot of experience with it, so it took me a while at the beginning of the project to figure out what I need to do to construct the correct arguments for the command line.
  - Reading the Python documentation on `argparse` helped me a lot in recalling how `argparse` works.